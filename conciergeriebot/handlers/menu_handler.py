# handlers/menu_handler.py
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes

class MenuHandler:
    """Gestionnaire du menu principal du bot"""

    # Dans menu_handler.py, modifier le keyboard :
    @staticmethod
    async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Affiche le menu principal avec toutes les options disponibles"""
        keyboard = [
            ["üìù Ajouter un client"],
            ["üìã Liste des clients"],
            ["üìÖ R√©servation"],
            ["‚öôÔ∏è Pr√©f√©rences"],
            ["üìß Export Email"],
            ["üóëÔ∏è Supprimer client"],
            ["üîÑ Menu principal"]
        ]
        
        reply_markup = ReplyKeyboardMarkup(
            keyboard,
            resize_keyboard=True,
            one_time_keyboard=False
        )
        
        welcome_message = (
            "üëã Bienvenue sur le bot de conciergerie !\n\n"
            "Choisissez une option dans le menu ci-dessous :\n\n"
            "üìù Ajouter un client\n"
            "üìã Liste des clients\n"
            "üìÖ R√©servation\n"
            "‚öôÔ∏è Pr√©f√©rences\n"
            "üìß Export Email\n"
            "üóëÔ∏è Supprimer client\n"
            "üîÑ Menu principal\n"
        )
        
        await update.message.reply_text(
            text=welcome_message,
            reply_markup=reply_markup
        )

    @staticmethod
    async def show_help(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Affiche l'aide et les instructions d'utilisation"""
        help_text = (
            "üí° Aide et Instructions\n\n"
            "Commandes disponibles :\n"
            "/start - Afficher le menu principal\n"
            "/help - Afficher ce message d'aide\n\n"
            "Pour utiliser le bot :\n"
            "1. Ajoutez d'abord un client\n"
            "2. Faites des r√©servations pour ce client\n"
            "3. G√©rez les pr√©f√©rences selon les besoins\n\n"
            "Pour annuler une op√©ration en cours,\n"
            "utilisez la commande /cancel"
        )
        await update.message.reply_text(help_text)

    @staticmethod
    async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
        """Annule l'op√©ration en cours"""
        await update.message.reply_text(
            "‚ùå Op√©ration annul√©e.\n"
            "Retour au menu principal."
        )
        await MenuHandler.show_main_menu(update, context)